name: CI

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        rust: ["stable", "nightly"]
    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          components: rustfmt, clippy

      - name: Cache
        uses: Swatinem/rust-cache@v2
        with:
          key: "${{ runner.os }}-lint-${{ matrix.rust }}"

      - name: Lint
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-targets --all-features -- -D warnings

  doctest:
    name: Test Docs
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        rust: ["stable", "nightly"]
    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}

      - name: Cache
        uses: Swatinem/rust-cache@v2
        with:
          key: "${{ runner.os }}-doctest-${{ matrix.rust }}"

      - name: cargo doc (all features)
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --doc --all-features

  test:
    name: Test
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        rust: ["stable", "nightly"]
        features:
          [
            { "key": "no-default-features", "args": "--no-default-features" },
            { "key": "default-features", "args": "" },
            { "key": "all-features", "args": "--all-features" },
          ]
    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}

      - name: Cache
        uses: Swatinem/rust-cache@v2
        with:
          key: "${{ runner.os }}-test-${{ matrix.rust }}-${{ matrix.features.args }}"

      - name: cargo test (${{ matrix.features.key }})
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --lib ${{ matrix.features.args }}

      - name: cargo doc (${{ matrix.features.key }})
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --doc ${{ matrix.features.args }}

